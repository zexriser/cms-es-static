(function(){'use strict';let currentSlide=0;let totalSlides=0;let slideInterval;document.addEventListener('DOMContentLoaded',function(){initializeApp()});function initializeApp(){initMobileNavigation();initDarkModeToggle();initGallerySlider();initBackToTop();initFormHandling();initDynamicAttributes();initCookieBanner();initScrollEffects();initSearchFunctionality();initLazyLoading();initReviewForm();initFAQ();initAlerts()}
    function initMobileNavigation(){const navToggle=document.getElementById('nav-toggle');const navMenu=document.getElementById('nav-menu');const sidebar=document.getElementById('sidebar');const sidebarOverlay=document.getElementById('sidebar-overlay');if(navToggle){navToggle.addEventListener('click',function(){if(sidebar&&sidebarOverlay){sidebar.classList.toggle('show');sidebarOverlay.classList.toggle('show');document.body.classList.toggle('sidebar-open')}
        const spans=this.querySelectorAll('span');const isOpen=sidebar?.classList.contains('show');spans.forEach((span,index)=>{if(isOpen){if(index===0)span.style.transform='rotate(45deg) translate(5px, 5px)';if(index===1)span.style.opacity='0';if(index===2)span.style.transform='rotate(-45deg) translate(7px, -6px)'}else{span.style.transform='';span.style.opacity='1'}})})}
        if(sidebarOverlay){sidebarOverlay.addEventListener('click',function(){sidebar?.classList.remove('show');sidebarOverlay.classList.remove('show');navMenu?.classList.remove('show');document.body.classList.remove('sidebar-open');const spans=navToggle?.querySelectorAll('span');spans?.forEach(span=>{span.style.transform='';span.style.opacity='1'})})}
        const navLinks=document.querySelectorAll('.nav-link, .mobile-nav-link');navLinks.forEach(link=>{link.addEventListener('click',function(){navMenu?.classList.remove('show');sidebar?.classList.remove('show');sidebarOverlay?.classList.remove('show');document.body.classList.remove('sidebar-open');const spans=navToggle?.querySelectorAll('span');spans?.forEach(span=>{span.style.transform='';span.style.opacity='1'})})});document.addEventListener('keydown',function(e){if(e.key==='Escape'){navMenu?.classList.remove('show');sidebar?.classList.remove('show');sidebarOverlay?.classList.remove('show');document.body.classList.remove('sidebar-open');const spans=navToggle?.querySelectorAll('span');spans?.forEach(span=>{span.style.transform='';span.style.opacity='1'})}})}
    function initDarkModeToggle(){const darkModeToggle=document.getElementById('dark-mode-toggle');if(darkModeToggle){const savedTheme=localStorage.getItem('theme');if(savedTheme){document.documentElement.setAttribute('data-theme',savedTheme);darkModeToggle.checked=savedTheme==='dark'}
        darkModeToggle.addEventListener('change',function(){const theme=this.checked?'dark':'light';document.documentElement.setAttribute('data-theme',theme);localStorage.setItem('theme',theme)})}}
    function initGallerySlider(){const galleries=document.querySelectorAll('.block-gallery');galleries.forEach(gallery=>{const slides=gallery.querySelectorAll('.gallery-slide');const dots=gallery.querySelectorAll('.dot');if(slides.length>0){totalSlides=slides.length;showSlide(0,gallery);slideInterval=setInterval(()=>{nextSlide(gallery)},5000);gallery.addEventListener('mouseenter',()=>{clearInterval(slideInterval)});gallery.addEventListener('mouseleave',()=>{slideInterval=setInterval(()=>{nextSlide(gallery)},5000)})}})}
    window.changeSlide=function(direction){const gallery=document.querySelector('.block-gallery, .profile-gallery-main');if(!gallery)return;const slides=gallery.querySelectorAll('.gallery-slide');currentSlide+=direction;if(currentSlide>=slides.length)currentSlide=0;if(currentSlide<0)currentSlide=slides.length-1;showSlide(currentSlide,gallery)};window.currentSlide=function(slideIndex){const gallery=document.querySelector('.block-gallery, .profile-gallery-main');if(!gallery)return;currentSlide=slideIndex-1;showSlide(currentSlide,gallery)};function showSlide(index,gallery){const slides=gallery.querySelectorAll('.gallery-slide');const dots=gallery.querySelectorAll('.dot');const thumbnails=gallery.querySelectorAll('.thumbnail');slides.forEach((slide,i)=>{slide.classList.toggle('active',i===index)});dots.forEach((dot,i)=>{dot.classList.toggle('active',i===index)});thumbnails.forEach((thumb,i)=>{thumb.classList.toggle('active',i===index)});currentSlide=index}
    function nextSlide(gallery){const slides=gallery.querySelectorAll('.gallery-slide');currentSlide=(currentSlide+1)%slides.length;showSlide(currentSlide,gallery)}
    function initBackToTop(){const backToTop=document.getElementById('back-to-top');if(backToTop){window.addEventListener('scroll',function(){if(window.pageYOffset>300){backToTop.classList.add('visible')}else{backToTop.classList.remove('visible')}});backToTop.addEventListener('click',function(e){e.preventDefault();window.scrollTo({top:0,behavior:'smooth'})})}}
    function initFormHandling(){const forms=document.querySelectorAll('form');forms.forEach(form=>{const inputs=form.querySelectorAll('input, textarea, select');inputs.forEach(input=>{input.addEventListener('blur',function(){validateField(this)});input.addEventListener('input',function(){clearFieldError(this)})});form.addEventListener('submit',function(e){e.preventDefault();if(validateForm(this)){submitForm(this)}})})}
    function validateField(field){const value=field.value.trim();const type=field.type;const required=field.required;const errorElement=document.getElementById(field.name+'-error');let isValid=!0;let errorMessage='';if(required&&!value){isValid=!1;errorMessage='This field is required.'}else if(value){switch(type){case 'email':const emailRegex=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;if(!emailRegex.test(value)){isValid=!1;errorMessage='Please enter a valid email address.'}
        break;case 'tel':const phoneRegex=/^[\+]?[1-9][\d]{0,15}$/;if(!phoneRegex.test(value.replace(/[\s\-\(\)]/g,''))){isValid=!1;errorMessage='Please enter a valid phone number.'}
        break;case 'number':const min=field.getAttribute('min');const max=field.getAttribute('max');const numValue=parseInt(value);if(min&&numValue<parseInt(min)){isValid=!1;errorMessage=`Value must be at least ${min}.`}else if(max&&numValue>parseInt(max)){isValid=!1;errorMessage=`Value must be no more than ${max}.`}
        break}}
        if(errorElement){errorElement.textContent=errorMessage;errorElement.style.display=isValid?'none':'block'}
        field.classList.toggle('error',!isValid);return isValid}
    function clearFieldError(field){const errorElement=document.getElementById(field.name+'-error');if(errorElement){errorElement.style.display='none'}
        field.classList.remove('error')}
    function validateForm(form){const inputs=form.querySelectorAll('input[required], textarea[required], select[required]');let isValid=!0;inputs.forEach(input=>{if(!validateField(input)){isValid=!1}});return isValid}
    function submitForm(form){const submitButton=form.querySelector('button[type="submit"]');const originalText=submitButton.textContent;submitButton.textContent='Sending...';submitButton.disabled=!0;form.classList.add('loading');setTimeout(()=>{submitButton.textContent=originalText;submitButton.disabled=!1;form.classList.remove('loading');showNotification('Your message has been sent successfully!','success');form.reset()},2000)}
    function initDynamicAttributes(){const addAttributeBtn=document.getElementById('add-attribute');const attributesContainer=document.getElementById('attributes-container');if(addAttributeBtn&&attributesContainer){addAttributeBtn.addEventListener('click',function(){addAttributeRow()});attributesContainer.addEventListener('click',function(e){if(e.target.classList.contains('remove-attribute')){removeAttributeRow(e.target)}})}}
    function addAttributeRow(){const attributesContainer=document.getElementById('attributes-container');const attributeRow=document.createElement('div');attributeRow.className='attribute-row';attributeRow.innerHTML=`
            <input type="text" class="form-input attribute-key" placeholder="Attribute name (e.g., Height, Education)">
            <input type="text" class="form-input attribute-value" placeholder="Value (e.g., 5'6\", University Degree)">
            <button type="button" class="btn btn-small btn-danger remove-attribute">Remove</button>
        `;attributesContainer.appendChild(attributeRow);attributeRow.querySelector('.attribute-key').focus()}
    function removeAttributeRow(button){const row=button.closest('.attribute-row');if(row){row.remove()}}
    function initCookieBanner(){const cookieBanner=document.getElementById('cookie-banner');if(cookieBanner){if(localStorage.getItem('cookiesAccepted')){cookieBanner.style.display='none'}
        const acceptButton=cookieBanner.querySelector('.cookie-accept');if(acceptButton){acceptButton.addEventListener('click',function(){localStorage.setItem('cookiesAccepted','true');cookieBanner.style.display='none'})}}}
    function initScrollEffects(){const observerOptions={threshold:0.1,rootMargin:'0px 0px -50px 0px'};const observer=new IntersectionObserver(function(entries){entries.forEach(entry=>{if(entry.isIntersecting){entry.target.style.opacity='1';entry.target.style.transform='translateY(0)'}})},observerOptions);const fadeElements=document.querySelectorAll('.card, .service-card, .profile-card');fadeElements.forEach(el=>{el.style.opacity='0';el.style.transform='translateY(20px)';el.style.transition='opacity 0.6s ease, transform 0.6s ease';observer.observe(el)})}
    function initSearchFunctionality(){const searchForms=document.querySelectorAll('.search-form');searchForms.forEach(form=>{form.addEventListener('submit',function(e){e.preventDefault();const searchInput=form.querySelector('input[type="search"]');const query=searchInput.value.trim();if(query){performSearch(query)}})});const filtersForm=document.getElementById('filters-form');if(filtersForm){filtersForm.addEventListener('submit',function(e){e.preventDefault();applyFilters()});filtersForm.addEventListener('reset',function(){setTimeout(clearFilters,10)})}}
    function performSearch(query){showNotification(`Searching for: "${query}"...`,'info');setTimeout(()=>{showNotification(`Search completed for: "${query}"`,'success')},1000)}
    function applyFilters(){const filtersForm=document.getElementById('filters-form');const formData=new FormData(filtersForm);const filters={};for(let[key,value]of formData.entries()){if(value)filters[key]=value}
        showNotification('Filters applied successfully!','success');console.log('Applied filters:',filters)}
    function clearFilters(){showNotification('Filters cleared!','info');console.log('Filters cleared')}
    function showNotification(message,type='info'){const notification=document.createElement('div');notification.className=`notification notification-${type}`;notification.innerHTML=`
            <span>${message}</span>
            <button type="button" class="notification-close">&times;</button>
        `;notification.style.cssText=`
            position: fixed;
            top: 20px;
            right: 20px;
            background: ${type === 'success' ? 'var(--success)' : type === 'error' ? 'var(--error)' : 'var(--info)'};
            color: white;
            padding: 1rem 1.5rem;
            border-radius: var(--border-radius);
            box-shadow: 0 4px 20px rgba(0,0,0,0.3);
            z-index: 10000;
            display: flex;
            align-items: center;
            gap: 1rem;
            max-width: 400px;
            animation: slideIn 0.3s ease;
        `;if(!document.querySelector('#notification-styles')){const style=document.createElement('style');style.id='notification-styles';style.textContent=`
                @keyframes slideIn {
                    from { transform: translateX(100%); opacity: 0; }
                    to { transform: translateX(0); opacity: 1; }
                }
                @keyframes slideOut {
                    from { transform: translateX(0); opacity: 1; }
                    to { transform: translateX(100%); opacity: 0; }
                }
                .notification-close {
                    background: none;
                    border: none;
                    color: white;
                    font-size: 1.2rem;
                    cursor: pointer;
                    padding: 0;
                    width: 20px;
                    height: 20px;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                }
            `;document.head.appendChild(style)}
        document.body.appendChild(notification);const closeBtn=notification.querySelector('.notification-close');closeBtn.addEventListener('click',()=>removeNotification(notification));setTimeout(()=>removeNotification(notification),5000)}
    function removeNotification(notification){if(notification&&notification.parentNode){notification.style.animation='slideOut 0.3s ease';setTimeout(()=>{if(notification.parentNode){notification.parentNode.removeChild(notification)}},300)}}
    function initLazyLoading(){if('IntersectionObserver' in window){const imageObserver=new IntersectionObserver((entries,observer)=>{entries.forEach(entry=>{if(entry.isIntersecting){const img=entry.target;img.src=img.dataset.src;img.classList.remove('lazy');imageObserver.unobserve(img)}})});document.querySelectorAll('img[loading="lazy"]').forEach(img=>{imageObserver.observe(img)})}}
    initLazyLoading();document.addEventListener('keydown',function(e){if(e.key==='Escape'){const navMenu=document.getElementById('nav-menu');const sidebar=document.querySelector('.sidebar');if(navMenu&&navMenu.classList.contains('open')){navMenu.classList.remove('open');if(sidebar)sidebar.classList.remove('open');}}
        if(e.key==='ArrowLeft'){const gallery=document.querySelector('.block-gallery:hover');if(gallery){e.preventDefault();window.changeSlide(-1)}}else if(e.key==='ArrowRight'){const gallery=document.querySelector('.block-gallery:hover');if(gallery){e.preventDefault();window.changeSlide(1)}}});function debounce(func,wait){let timeout;return function executedFunction(...args){const later=()=>{clearTimeout(timeout);func(...args)};clearTimeout(timeout);timeout=setTimeout(later,wait)}}
    const debouncedScroll=debounce(function(){},10);window.addEventListener('scroll',debouncedScroll,{passive:!0});document.addEventListener('click',function(e){if(e.target.matches('a[href^="#"]')){e.preventDefault();const target=document.querySelector(e.target.getAttribute('href'));if(target){target.scrollIntoView({behavior:'smooth',block:'start'})}}});initReviewForm();function initReviewForm(){const reviewForm=document.getElementById('review-form');if(!reviewForm)return;const starRating=reviewForm.querySelector('.star-rating');if(starRating){starRating.addEventListener('change',function(e){if(e.target.type==='radio'){const rating=e.target.value;console.log('Rating selected:',rating)}})}
        reviewForm.addEventListener('submit',function(e){e.preventDefault();const formData=new FormData(reviewForm);const rating=formData.get('rating');const name=formData.get('name')||'Anonymous';const reviewText=formData.get('review');if(!rating){showNotification('Please select a rating','error');return}
            if(!reviewText.trim()){showNotification('Please write a review','error');return}
            const comment=createCommentElement({author:name,rating:rating,text:reviewText,date:'Just now'});const commentsList=document.querySelector('.comments-list');if(commentsList){commentsList.insertBefore(comment,commentsList.firstChild)}
            reviewForm.reset();showNotification('Review submitted successfully!','success')})}
    function createCommentElement(data){const comment=document.createElement('div');comment.className='comment';const stars='★'.repeat(parseInt(data.rating))+'☆'.repeat(5-parseInt(data.rating));comment.innerHTML=`
            <div class="comment-header">
                <span class="comment-author">${escapeHtml(data.author)}</span>
                <span class="comment-rating">${stars}</span>
                <span class="comment-date">${data.date}</span>
            </div>
            <p class="comment-text">${escapeHtml(data.text)}</p>
        `;return comment}
    function escapeHtml(text){const div=document.createElement('div');div.textContent=text;return div.innerHTML}})();function toggleReplyForm(commentId){const replyForm=document.getElementById(`reply-form-${commentId}`);if(replyForm){const isVisible=replyForm.style.display!=='none';replyForm.style.display=isVisible?'none':'block';if(!isVisible){const textarea=replyForm.querySelector('textarea');if(textarea){textarea.focus()}}}}
document.addEventListener('DOMContentLoaded',function(){const replyForms=document.querySelectorAll('.reply-form');replyForms.forEach(form=>{form.addEventListener('submit',function(e){e.preventDefault();const textarea=form.querySelector('textarea[name="reply"]');const replyText=textarea.value.trim();if(!replyText){showNotification('Please write a reply','error');return}
    const replyContainer=form.closest('.reply-form-container');const comment=replyContainer.closest('.comment');const repliesContainer=comment.querySelector('.replies');const newReply=createReplyElement({author:'You',text:replyText,date:'Just now'});if(repliesContainer){repliesContainer.appendChild(newReply)}else{const newRepliesContainer=document.createElement('div');newRepliesContainer.className='replies';newRepliesContainer.appendChild(newReply);comment.appendChild(newRepliesContainer)}
    textarea.value='';replyContainer.style.display='none';showNotification('Reply posted successfully!','success')})})});function createReplyElement(data){const reply=document.createElement('div');reply.className='comment reply';reply.innerHTML=`
        <div class="comment-header">
            <span class="comment-author">${escapeHtml(data.author)}</span>
            <span class="comment-date">${data.date}</span>
        </div>
        <p class="comment-text">${escapeHtml(data.text)}</p>
    `;return reply}
function escapeHtml(text){const div=document.createElement('div');div.textContent=text;return div.innerHTML}
function initFAQ(){const categoryBtns=document.querySelectorAll('.category-btn');const faqCategories=document.querySelectorAll('.faq-category');categoryBtns.forEach(btn=>{btn.addEventListener('click',function(){const category=this.getAttribute('data-category');categoryBtns.forEach(b=>b.classList.remove('active'));this.classList.add('active');faqCategories.forEach(cat=>{cat.classList.remove('active');if(cat.id===category){cat.classList.add('active')}})})});const faqQuestions=document.querySelectorAll('.faq-question');faqQuestions.forEach(question=>{question.addEventListener('click',function(){const faqItem=this.parentElement;const isOpen=faqItem.classList.contains('open');document.querySelectorAll('.faq-item').forEach(item=>{item.classList.remove('open')});if(!isOpen){faqItem.classList.add('open')}})})}
function initAlerts(){const autoDissmissAlerts=document.querySelectorAll('.alert[data-auto-dismiss]');autoDissmissAlerts.forEach(alert=>{const delay=parseInt(alert.getAttribute('data-auto-dismiss'))||5000;setTimeout(()=>{dismissAlert(alert)},delay)});document.addEventListener('click',function(e){if(e.target.classList.contains('alert-close')){dismissAlert(e.target.closest('.alert'))}})}
function dismissAlert(alertElement){if(alertElement){alertElement.classList.add('fade-out');setTimeout(()=>{alertElement.remove()},300)}}
function showAlert(type,title,message,actions=null,autoDissmiss=!1){const alertContainer=document.getElementById('alert-container')||createAlertContainer();const alertHTML=`
            <div class="alert alert-${type}" ${autoDissmiss ? 'data-auto-dismiss="5000"' : ''}>
                <div class="alert-icon">${getAlertIcon(type)}</div>
                <div class="alert-content">
                    ${title ? `<div class="alert-title">${title}</div>` : ''}
                    <p class="alert-message">${message}</p>
                    ${actions ? `<div class="alert-actions">${actions}</div>` : ''}
                </div>
                <button class="alert-close">×</button>
            </div>
        `;alertContainer.insertAdjacentHTML('beforeend',alertHTML);if(autoDissmiss){const newAlert=alertContainer.lastElementChild;setTimeout(()=>{dismissAlert(newAlert)},5000)}}
function createAlertContainer(){const container=document.createElement('div');container.id='alert-container';container.style.cssText=`
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 9999;
            max-width: 400px;
            width: 100%;
        `;document.body.appendChild(container);return container}
function getAlertIcon(type){const icons={success:'✅',warning:'⚠️',error:'❌',info:'ℹ️',primary:'🔥',secondary:'⭐'};return icons[type]||'ℹ️'}
window.showAlert=showAlert;window.dismissAlert=dismissAlert;if('serviceWorker' in navigator){window.addEventListener('load',function(){})}
